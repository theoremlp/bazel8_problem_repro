[mypy]
# make command line output easier to read
pretty = True

# disallow functions that only partially annotate types
disallow_incomplete_defs = True

# check all of our old functions that lack type defs
check_untyped_defs = True

# ensure type annotations on all definitions
disallow_untyped_defs = True

# warn on unnecessary 'type: ignore' comments
warn_unused_ignores = True

# warn on unnecessary casts
warn_redundant_casts = True

# prefix each error with the mypy error code
show_error_codes = True

# disallow implicit optionals, such as 'foo: str = None'
# https://github.com/python/mypy/issues/9091
no_implicit_optional = True

# warn on unreachable code
warn_unreachable = True

# disallow inferring type of a var for `None` from two assignments in different scopes
local_partial_types = True

# disallow comparisons of non-overlapping types.
strict_equality = True

# allow imports that lack type information or stubs in typeshed
ignore_missing_imports = True

# do not produce errors for imported code
# (only produce errors for the explicitly listed files)
follow_imports = silent

# follow imports to discover type stubs
follow_imports_for_stubs = True

# allow anything outside of thm.* to implicitly re-export
# (see below where we flip this for thm.*)
no_implicit_reexport = False

# enable features that do not otherwise have their own config options:
#   explicit-override: 
#     require an @override decorator on any function that overrides a parent class or protocol.
#     this helps make it plainly apparent at override sites what's happening.
#   ignore-without-code:
#     require `type: ignore` comments to include an explicit suppression in square brackets.
enable_error_code = explicit-override,ignore-without-code

# pydantic plugin settings
[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True


